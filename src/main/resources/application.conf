app {
  api {
    interface = "127.0.0.1"
    port = "29303"
  }

  topic {
    new-webhook = "new"
    change-webhook = "modify"
    delete-webhook = "delete"
  }

  db-name = "app"
}

akka {
  loglevel = "INFO"
}

db.default {
  driver="org.postgresql.Driver"
  url="jdbc:postgresql://localhost:5432/"${app.db-name}
  user="postgres"
  password="example"

  # Connection Pool settings
  poolInitialSize=5
  poolMaxSize=7
  # poolConnectionTimeoutMillis defines the amount of time a query will wait to acquire a connection
  # before throwing an exception. This used to be called `connectionTimeoutMillis`.
  poolConnectionTimeoutMillis=1000
  poolValidationQuery="select 1 as one"
  poolFactoryName="commons-dbcp2"
}

kafka {
  producer {
    main {
      props = {
        "bootstrap.servers" = "127.0.0.1:9092"
        "acks" = "all"
        "batch.size" = 16384  // 16KiB
        "linger.ms" = 5
        "request.timeout.ms" = 3000
        "delivery.timeout.ms" = 5000
        "buffer.memory" = 33554432  // 32MiB
      }
    }
  }

  consumer {
    default {
      bootstrap-servers = "127.0.0.1:9092"
      auto-offset-reset-config = "earliest"
      commiter-settings {
        max-batch = 1000
        max-interval = 2s
        parallelism = 1
        delivery = WaitForAck
        when = OffsetFirstObserved
      }
    }
  }
}
