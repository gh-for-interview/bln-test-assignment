version: '3.3'

services:
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./kafka/zookeeper/data:/data
      - ./kafka/zookeeper/datalog:/datalog
    network_mode: host

  kafka1:
    image: confluentinc/cp-kafka:5.1.0
    hostname: kafka1
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://127.0.0.1:19092,LISTENER_DOCKER_EXTERNAL://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "127.0.0.1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - ./kafka/data:/var/lib/kafka/data
    depends_on:
      - zoo1
    network_mode: host

  db:
    image: postgres:13.2
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_DB: app
    ports:
      - "127.0.0.1:5432:5432"

  migration:
    image: flyway/flyway:7.8.1
    command: -url=jdbc:postgresql://host.docker.internal:5432/app -connectRetries=60 -user=postgres -password=example migrate
    volumes:
      - ./migrations:/flyway/sql
    depends_on:
      - db

  adminer:
    image: adminer:4.8.0
    network_mode: host

  app:
    image: app
    depends_on:
      - db
      - kafka1
    network_mode: host
